---
- name: DO | Set defaults
  ansible.builtin.set_fact:
    lb_name: ''
    lb_spec: "{{ lb.spec | d({}) }}"

# API does not return when member=true name=vpc_name
- name: DO | Lookup for vpc_uuid
  when:
    - lb_spec.vpc_uuid is not defined
    - lb_spec.vpc_uuid | d('') | length == 0
  block:
  - name: DO | Lookup for vpc_uuid
    community.digitalocean.digital_ocean_vpc_info:
    register: do_vpc

  - name: DO | Set vpc_uuid
    ansible.builtin.set_fact:
      lb_spec: "{{ lb_spec | combine({
          'vpc_uuid': do_vpc.data | json_query(filter_vpc) | join(' ')
        }) }}"
    when: not(do_vpc.failed)
    vars:
      filter_vpc: "[?name=='{{ lb.vpc_name }}'].id"

- name: DO | Gather load balancers
  community.digitalocean.digital_ocean_load_balancer_info:
  register: do_lbs

- name: DO | Create
  community.digitalocean.digital_ocean_load_balancer:
  args: "{{ lb_spec }}"
  register: lb_out

- name: DO | Gather load balancers to register
  community.digitalocean.digital_ocean_load_balancer_info:
  register: do_lbs

- name: DO | Set LB IP when eixsts
  ansible.builtin.set_fact:
    lb_ip: "{{ do_lbs.data | community.general.json_query(filter_lb) | join(' ') }}"
  vars:
    filter_lb: "[?name=='{{ lb_spec.name }}'].ip"

- name: DO | Callback register resources
  ansible.builtin.include_tasks: "do-lb-register-{{ cb.service }}.yaml"
  with_items: "{{ lb.callbacks | d([]) }}"
  loop_control:
    loop_var: cb
