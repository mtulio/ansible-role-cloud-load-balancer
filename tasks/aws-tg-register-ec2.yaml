---

- name: Target | AWS | Register EC2 | Show
  ansible.builtin.debug:
    var: machine

- name: Target | AWS | Register EC2 | Filter machines
  amazon.aws.ec2_instance_info:
    filters: "{{ machine.filters }}"
  register: ec2_out

- name: Target | AWS | Register EC2 | Filter spec
  ansible.builtin.debug:
    var: ec2_out
  when: debug|d(false)

- name: Target | AWS | Register EC2 | Filter check
  ansible.builtin.debug:
    msg: "The filters provided did not returned any instance. Fix it and try again. Filter={{ machine.filters }}"
  failed_when: ec2_out.instances | length == 0

- name: Target | AWS | Register EC2 | Get IP
  ansible.builtin.set_fact:
    machine_target_id: "{{ ec2_out.instances[0].private_ip_address }}"
  when: machine.resource_type == 'ip'

- name: Target | AWS | Register EC2 | Get ID
  ansible.builtin.set_fact:
    machine_target_id: "{{ ec2_out.instances[0].instance_id }}"
  when: machine.resource_type == 'instanceId'

- name: Target | AWS | Register EC2 | Attach instance
  community.aws.elb_target:
    target_group_name: "{{ tg_out.target_group_name }}"
    target_id: "{{ machine_target_id }}"
    target_port: "{{ machine.port | d(omit) }}"
    state: present
