---
- name: LB | DO | Register DNS | Set IP
  ansible.builtin.set_fact:
    res_value: "{{ lb_ip }}"
  when: res.value is not defined

# Module does not provide a good lookup nor indepotency, so
# let's load current records filter it and create only new ones.
# It provides indepotency by name, and not value. Additional
# checks should be done to achieve that.

- name: LB | DO | Register DNS | Get RR
  community.digitalocean.digital_ocean_domain_record_info:
    state: present
    domain: "{{ res.domain }}"
  register: reg_dns_zone_records

- name: LB | DO | Register DNS | Show RRs
  ansible.builtin.debug:
    var: reg_dns_zone_records

- name: LB | DO | Register DNS | Set list to add
  ansible.builtin.set_fact:
    rr_to_add: []

- name: LB | DO | Register DNS | Discover value
  ansible.builtin.set_fact:
    rr_to_add: "{{ rr_to_add + [record] }}"
  when: reg_dns_zone_records.data.records | community.general.json_query(q_rr) | length <= 0
  with_items: "{{ res.records }}"
  loop_control:
    loop_var: record
  vars:
    q_rr: "[?name=='{{ record.name }}']"

- name: LB | DO | Register DNS | Show RRs to add
  ansible.builtin.debug:
    var: rr_to_add

- name: LB | DO | Register DNS | Create RR # noqa: args[module]
  community.digitalocean.digital_ocean_domain_record:
    state: present
    domain: "{{ res.domain }}"
    type: "{{ record.type }}"
    name: "{{ record.name }}"
    data: "{{ record.value | d(res_value) }}"
  with_items: "{{ rr_to_add }}"
  loop_control:
    loop_var: record
